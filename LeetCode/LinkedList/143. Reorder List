143. Reorder List
class Solution {
public:
    void reorderList(ListNode* head) {
        ListNode *temp =head;
        vector<ListNode*>v;
        while(temp!=NULL) {
        v.push_back(temp);
        temp=temp->next;
        }

        int i =0;
        int j=v.size()-1;
        temp=v[i];
        temp->next=v[j];
        i++;
        temp=temp->next;
                 while(j>i)  {
            temp->next = v[i];
            temp = temp->next;
            j--;
            temp->next = v[j];
            temp = temp->next;
            i++;
        }
        temp->next=NULL;
    }
};





// Approach
// First we took all the addresses of the nodes in a vector
// Then we took the two pointers one at starting of v vector(i) and another at the end(j)
// Then we update the head with the starting pointer(i) and the after that attached the last pointer to the head(j)
// Then we increment the i
// We don't decrement the j value at the same time because we want the starting node ie i+1 and then j
// Then we took a temp variable to traverse
// Then in a while loop we continue to update the temp and accordingly incremented and decremented the value of i and j
